"use strict";(self.webpackChunkbywater_blog=self.webpackChunkbywater_blog||[]).push([[4403],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),h=o,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function h(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4527:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="[Leetcoding] CheatSheet",l={unversionedId:"leetcoding/cheatsheet",id:"leetcoding/cheatsheet",isDocsHomePage:!1,title:"[Leetcoding] CheatSheet",description:"cheatSheet",source:"@site/docs/leetcoding/cheatsheet.md",sourceDirName:"leetcoding",slug:"/leetcoding/cheatsheet",permalink:"/bywater-blog/leetcoding/cheatsheet",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"[\u9435\u4eba\u8cfd 2022-\u64ca\u6557\u524d\u7aef\u9762\u8a66\u5927\u4f5c\u6230] \u5b8c\u8cfd\u62c9\uff01",permalink:"/bywater-blog/ironMan2022/finish"},next:{title:"[Leetcode-CommonProblems] 8 queens \u516b\u7687\u540e",permalink:"/bywater-blog/leetcoding/CommonProblems/8Queen"}},c=[{value:"cheatSheet",id:"cheatsheet",children:[{value:"string",id:"string",children:[]}]}],s={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"leetcoding-cheatsheet"},"[Leetcoding]"," CheatSheet"),(0,o.kt)("h2",{id:"cheatsheet"},"cheatSheet"),(0,o.kt)("h3",{id:"string"},"string"),(0,o.kt)("h4",{id:"parentheses-problem"},"Parentheses problem"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"use stack track open and close Parentheses"),(0,o.kt)("li",{parentName:"ol"},"use a variable to track Parentheses count(ex, open Parentheses add one, close Parentheses minus one)")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Problems")),(0,o.kt)("p",null,"Easy: 1021, 1614\nMedium:"),(0,o.kt)("h4",{id:"anagram"},"anagram"),(0,o.kt)("p",null,"definition: a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"sort it first, then string should be the same when reverse it.")),(0,o.kt)("p",null,"Problems:"),(0,o.kt)("p",null,"Easy: 242\nHard:"))}p.isMDXComponent=!0}}]);