"use strict";(self.webpackChunkbywater_blog=self.webpackChunkbywater_blog||[]).push([[1350],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7248:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const i={sidebar_position:1},o="[React] Git basic",l={unversionedId:"Git/Basic",id:"Git/Basic",isDocsHomePage:!1,title:"[React] Git basic",description:"Resources//dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#fetch",source:"@site/docs/Git/Basic.md",sourceDirName:"Git",slug:"/Git/Basic",permalink:"/bywater-blog/Git/Basic",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"[JS] promise implementation",permalink:"/bywater-blog/Javascript/promise_implementation"},next:{title:"[JS] Interview",permalink:"/bywater-blog/Interview/index"}},s=[{value:"Resources: https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#fetch",id:"resources-httpsdevtolydiahalliecs-visualized-useful-git-commands-37p1fetch",children:[{value:"Reset, Revert and Rebase",id:"reset-revert-and-rebase",children:[]},{value:"merge vs rebase",id:"merge-vs-rebase",children:[]}]}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"react-git-basic"},"[React]"," Git basic"),(0,n.kt)("h2",{id:"resources-httpsdevtolydiahalliecs-visualized-useful-git-commands-37p1fetch"},"Resources: ",(0,n.kt)("a",{parentName:"h2",href:"https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#fetch"},"https://dev.to/lydiahallie/cs-visualized-useful-git-commands-37p1#fetch")),(0,n.kt)("h3",{id:"reset-revert-and-rebase"},"Reset, Revert and Rebase"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://gitbook.tw/chapters/rewrite-history/reset-revert-and-rebase"},"https://gitbook.tw/chapters/rewrite-history/reset-revert-and-rebase")),(0,n.kt)("h3",{id:"merge-vs-rebase"},"merge vs rebase"),(0,n.kt)("p",null,"merge:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fast-forward (--ff) => default behavior when the merging branches has all of the current branch's commit.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"will not create a new commit."))),(0,n.kt)("li",{parentName:"ul"},"No-fast-forward (--no-ff) => default behavior when current branch contains commits that the merging branch doesn't have.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"will create a new commit.")))),(0,n.kt)("p",null,"rebase:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Copies commits on top of another branch",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"will not create a new commit"))),(0,n.kt)("li",{parentName:"ul"},"interactive rebase",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"allow users to reword, edit, squash, fixup...commit.")))))}u.isMDXComponent=!0}}]);